Reflections_L3

Okay, it seems like we're entering the 21st century at last. I'm so tired of doing everything through through a commmand line. I realize that I can't aviod the command line, but at least I can do something that makes more sense to me. I'm sorry to all of those who believe that the command line is quicker and simpler, but a drag-and-drop makes a lot more sense and is much quicker to me.

To answer your question, having a remote repository makes a lot of sense to me. If the project has to be shared, which is probably a regular occurrence in the workplace, or even amongst friends and allies outside of the workplace, then everyone can be on the same page. Another advantage of a remote repostitory is if your computer should decide to die, which has happened to me at the most inopportune times, then at least some version of your work is safe somewhere else. You may have to rework whatever you were doing but you don't have to start from the ground up. Then you'd have to wonder what killed your system and if it had anything to do with whatever you were working on when it died.

All I can think of that this is a common theme every time Manual vs Automatic save/sinc is brought up. Both have their own advantages and disadvantages. I still lean more towards manual saves largely so that I can be certain that the information in the file is current and I can be certain that I know what I was doing when the save was made. The commit notes help but the ability to add a few notes in the project itself is more useful.

Yet again I have to start by saying "okay". The principles involved in the whole system makes some sense, and the ideas aren't convoluted. The step by step instruction is very usefull as well, but I have to wonder if you guys aren't making things more byzantine than neccessary. I may be a simpleton, but why are we relying so much on command-line inputs? In my own experience with GitHub I've been able to clone, fork, and branch without difficulty and without using the command line. I've found that some things are useful in the command line but most aren't, so I'm only using the command line when competely neccessary. As I said, I might be thinking too simply but until I find more reasons to lean more on the command line I'll be using it in a more secondary role.

To answer your question, I'd use a clone when I needed to take a project outside the prescribed lines of the design. A branch would be used when I was doing some recognizable change in the code with the chance of having to merge it back into the master at some point. It could end up being a dead end and stop after one or two commits. A fork would be useful when you are shifting directions from the original collaborator and not planning to reintegrating it back into the master. I couldn't be described as your own work completely but it could serve as a starting point to a new project.